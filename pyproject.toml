[build-system]
requires = ["setuptools>=68", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "spatio-textual"
version = "0.1.0"
description = "Spatial textual annotation with spaCy: chunking, list-of-texts, refined place types, and a multiprocessing CLI."
readme = "README.md"
requires-python = ">=3.9"
authors = [
  { name = "Your Name", email = "you@example.com" }
]
license = { file = "LICENSE" }
keywords = ["nlp", "spacy", "geography", "annotation", "holocaust", "lake-district"]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Topic :: Text Processing :: Linguistic",
]

# Hard requirements
dependencies = [
  "spacy>=3.6,<4.0",
  "geonamescache>=2.0.0",
]

[project.optional-dependencies]
# Install with: pip install spatio-textual[transformers]
transformers = [
  "spacy-transformers>=1.3.4",
  # Install a torch build that fits your platform/GPU; CPU-only example:
  # "torch>=2.0.0",
]

[project.urls]
Homepage = "https://github.com/SpaceTimeNarratives/spatio-textual"
Issues = "https://github.com/SpaceTimeNarratives/spatio-textual/issues"

[project.scripts]
# After install, this exposes a command `spatio-textual`
spatio-textual = "spatio_textual.cli:main"

[tool.setuptools]
# Include non-Python data files from the package
include-package-data = true

[tool.setuptools.package-data]
# Ship resource lists inside the wheel
spatio_textual = [
  "resources/*.txt",
]
"spatio_textual.resources" = ["positive-words.txt", "negative-words.txt"]


[tool.setuptools.packages.find]
# Ensure only the package directory is included
include = ["spatio_textual"]